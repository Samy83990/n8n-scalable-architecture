stages:
  - test
  - build
  - deploy
  - post-deploy
  - mirror

variables:
  DOCKER_REGISTRY: ${CI_REGISTRY}
  IMAGE_NAME: ${CI_REGISTRY_IMAGE}
  IMAGE_TAG: ${CI_COMMIT_SHA}

test:
  stage: test
  image: node:16-alpine
  script:
    - echo "ExÃ©cution des tests"
    # - npm ci
    # - npm test
  only:
    - merge_requests
    - main
    - develop

build:
  stage: build
  image: docker:20
  services:
    - docker:20-dind
  script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin ${CI_REGISTRY}
    - docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
    - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_TAG}
    - docker push ${IMAGE_NAME}:latest
  only:
    - main
    - develop

deploy-dev:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl config use-context dev
    - cd k8s/overlays/dev
    - kustomize edit set image n8nio/n8n=${IMAGE_NAME}:${IMAGE_TAG}
    - kubectl apply -k .
  environment:
    name: development
  only:
    - develop

deploy-staging:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl config use-context staging
    - cd k8s/overlays/staging
    - kustomize edit set image n8nio/n8n=${IMAGE_NAME}:${IMAGE_TAG}
    - kubectl apply -k .
  environment:
    name: staging
  only:
    - main
  when: manual

deploy-prod:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl config use-context prod
    - cd k8s/overlays/prod
    - kustomize edit set image n8nio/n8n=${IMAGE_NAME}:${IMAGE_TAG}
    - kubectl apply -k .
  environment:
    name: production
  only:
    - main
  when: manual

auto-push-main:
  stage: post-deploy
  image: alpine/git:latest
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - git config --global user.email "ci@example.com"
    - git config --global user.name "Samy83990"
  script:
    - git fetch origin main || git checkout -b main
    - git checkout main || git checkout -b main
    - git remote set-url origin git@github.com:Samy83990/n8n-scalable-architecture.git
    - git add .
    - if ! git diff --cached --quiet; then git commit -m "[CI] Auto-push: sync all changes from pipeline"; else echo "No changes to commit"; fi
    - git push origin main
  only:
    - main
    - develop
    - merge_requests
  except:
    - tags

mirror-to-github:
  stage: mirror
  image: alpine/git:latest
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - git config --global user.email "ci@example.com"
    - git config --global user.name "Samy83990"
  script:
    - git remote add github git@github.com:Samy83990/n8n-scalable-architecture.git || git remote set-url github git@github.com:Samy83990/n8n-scalable-architecture.git
    - git push --mirror github
  only:
    - main
  except:
    - tags